#Module 13: Error Log Monitoring


#Module 13 Lab  
#Introduction  In this lab, you will learn how to assign multiple values to one variable and Regular Expression to match key words 
#and capture valuable information from SQL Server error logs.  

#Objectives  After completing this lab, you will be able to: 
#• Creating and access arrays 
#• Use Regular Expression to match values 
#• Monitoring SQL Server Error logs using SQLPS Prerequisites   None Virtual Machine Details 
#• Virtual Machine Name:Contoso 
#• Login Username:Contoso\Administrator 
#• Login Password: Password1 

#Estimated Time to Complete These Lab’s  45 minutes 


#Exercise 13.1: Description Work with Regular Expressions 
#Objectives  
#In this exercise, we will learn to use Regular Expressions in PowerShell. 
#After completing this lab, you will be able to: 
    #• Understand Regular Expression 
    #• Use Regular Expression to match strings and numbers 

#Scenario 

#You are creating a monitoring solution for all your production server and collecting information like CPU and RAM. 
#Prerequisites  
    #Not Applicable 


#Task 1. An example of a SQL Server 2012 error log entries: 
2015-12-03 08:19:07.84 Server      SQL Server detected 1 sockets with 1 cores per socket and 1 logical processors per socket, 1 total logical processors; 
using 1 logical processors based on SQL Server licensing. This is an informational message; no user action is required. 
2015-12-03 08:19:07.84 Server      Detected 2045 MB of RAM. This is an informational message; no user action is required. 
 
#Below is the common Regular Expression operators: 
#Operator - Logic 
#[value] - Exact characters anywhere in original value 
#[.] Any single character, except newline 
#[value] At least one character in brackets 
#[range] At least one character within range 
#[^] Beginning character(s) 
#[$] End character(s) 
#[\w] Any word character 
#[\d] Any decimal digit 
#[*] Zero or more {0,} 
#[+] One or more {1,} 
#[?] Zero or one {0,1} 
#[{n}] Exactly n matches 
#[{n,}] At least n matches 
#[{n,m}] At least n, but no more than m, matches 
 
#Which operator should we use to match the number in "1 total logical processors"? 
 
 
#2. Now enter the following command in Windows PowerShell console: 
$LogFile = "E:\MSSQL11.SQL2012INST1\MSSQL\Log\ERRORLOG" 
$LogMsg = Get-Content $LogFile 
[Regex]::Match($LogMsg, "\d+ total logical processors") 
 
 
#3. Review the result. Construct a pipeline that shows the output object and its properties: ____________________________________________________________________   
 
#4. Check your answer. Now enter the following command in Windows PowerShell console: 
$LogFile = "E:\MSSQL11.SQL2012INST1\MSSQL\Log\ERRORLOG" 
$LogMsg = Get-Content $LogFile 
[Regex]::Match($LogMsg, "\d+ total logical processors")|Get-Member 
 
  
 
#5. To be able to get the number value, we will need to use Groups property. Construct a pipeline that will show just the number value of previous step: 
  
#6. To match "Detected 2045 MB of RAM", create a pattern to capture the size (number) of RAM: ____________________________________________________________ 
#7. Write the Regular Expression pattern to match the messages on the left: 
Port number:  
String: <ipv4> 1433                 Expected value: 1433 
____________________________________________________________________ 
 
Authentication mode: 
Authentication mode is MIXED      Expected Value: MIXED 
____________________________________________________________________ 


#8. What is the command to list all the 'server' messages? Write down the command below: 
 
 
#9. What is the command to list all the messages except for 'Backup' messages? Write down the command below: 
 
 
#10. Construct a pipeline to return messages between 8PM to 10PM yesterday? 
#Note: In Windows PowerShell, an array might contain different types. 



 
 <#

 Exercise 13.3: Description Traversing System Event Log 
Objectives  
In this exercise, we will learn to use traverse the System Event Log. After completing this lab, you will be able to: • Traverse the System Event Log 
Scenario 
A user calls and states the database is giving an error.  This lab will show you how to look for “error” in the System Event Log Prerequisites  
Not Applicable
 #>


#Task 
#1. On your workstation go to Start   and type PowerShell ISE and press Enter. 
 
#2. In the top box type the following: 
Get-EventLog -logname "System" -message "*error*" 

#and then press the F5 or   to execute the command. (See below) 
 
#14    Lab 13: Error Log Monitoring 
 
 
#Note:  This brings back the rows with the word Error in System Event Log. 
 

